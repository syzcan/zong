#jdbc.driverClassName = oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.1.125.65:1521:ORCL
#jdbc.username = RPADMIN
#jdbc.password = admin

jdbc.driverClassName = com.mysql.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/zbase?useUnicode=true&characterEncoding=utf8
jdbc.username = root
jdbc.password = Zong

mongo.host = 192.168.128.1

#druid
#初始化时建立物理连接的个数
druid.initialSize=10
#最小连接池数量
druid.minIdle=15
#最大连接池数量
druid.maxActive=60
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，
druid.maxWait=60000
druid.timeBetweenEvictionRunsMillis=60000
druid.minEvictableIdleTimeMillis=300000
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
druid.poolPreparedStatements=true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
druid.maxPoolPreparedStatementPerConnectionSize=40

#数据库类型，不用配置druid默认会从数据源获取
#druid.dbType=oracle
#测试sql
druid.testSql=SELECT 'x' FROM DUAL
#慢的sql 时间设置
druid.slowSqlMillis=3000
#超过时间慢的sql 是否记录日志
druid.logSlowSql=true